#!/usr/bin/env python3
"""
–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Google API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
"""

import asyncio
import httpx
import urllib.parse

# –†–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –≤–∞—à–µ–≥–æ .env —Ñ–∞–π–ª–∞
GOOGLE_API_KEY = "AIzaSyDaosLf3VqRE_wsoqL3aTCI03SgdMYBnqQ"
GOOGLE_SEARCH_ENGINE_ID = "d68dd1921d0c745aa"

async def test_google_api_direct():
    """–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Google API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏"""
    
    print("üîç –ü–†–Ø–ú–ê–Ø –ü–†–û–í–ï–†–ö–ê GOOGLE API –° –†–ï–ê–õ–¨–ù–´–ú–ò –ö–õ–Æ–ß–ê–ú–ò")
    print("="*60)
    
    company_name = "–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        f'"{company_name}" –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        f'"{company_name}" —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
        f'"{company_name}" —Ñ–æ–Ω–¥ –ø–æ–º–æ—â—å',
        f'"{company_name}" —Å–ø–æ–Ω—Å–∏—Ä—É–µ—Ç',
        f'"{company_name}" –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è'
    ]
    
    timeout = httpx.Timeout(connect=5.0, read=30.0, write=10.0, pool=5.0)
    async with httpx.AsyncClient(timeout=timeout) as client:
        for i, query in enumerate(test_queries, 1):
            print(f"\nüîç –ó–∞–ø—Ä–æ—Å {i}: {query}")
            
            search_url = (
                f"https://www.googleapis.com/customsearch/v1?"
                f"key={GOOGLE_API_KEY}&"
                f"cx={GOOGLE_SEARCH_ENGINE_ID}&"
                f"q={urllib.parse.quote(query)}&"
                f"num=5&"
                f"lr=lang_ru&"
                f"gl=kz"
            )
            
            try:
                response = await client.get(search_url)
                print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
                if response.status_code == 200:
                    data = response.json()
                    print("‚úÖ Google API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    
                    if 'items' in data:
                        print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                        for j, item in enumerate(data['items'], 1):
                            title = item.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                            snippet = item.get('snippet', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
                            link = item.get('link', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')
                            
                            print(f"  {j}. {title}")
                            print(f"     {snippet[:100]}...")
                            print(f"     {link}")
                            print()
                    else:
                        print("   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        if 'error' in data:
                            print(f"   –û—à–∏–±–∫–∞ API: {data['error']}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                    try:
                        error_data = response.json()
                        print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
                    except:
                        print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                
            except Exception as e:
                print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            
            # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if i < len(test_queries):
                await asyncio.sleep(1)

if __name__ == "__main__":
    asyncio.run(test_google_api_direct()) 
#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Custom Search API
"""

import asyncio
import httpx
import json
import urllib.parse
from src.core.config import get_settings

async def debug_google_api():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Custom Search API"""
    
    settings = get_settings()
    
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GOOGLE CUSTOM SEARCH API")
    print("="*60)
    
    print(f"üìã API Key: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.GOOGLE_API_KEY else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    print(f"üìã Search Engine ID: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.GOOGLE_SEARCH_ENGINE_ID else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    
    if not settings.GOOGLE_API_KEY or not settings.GOOGLE_SEARCH_ENGINE_ID:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API –∫–ª—é—á–∏!")
        return
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å")
    print("="*60)
    
    simple_query = "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"
    search_url = (
        f"https://www.googleapis.com/customsearch/v1?"
        f"key={settings.GOOGLE_API_KEY}&"
        f"cx={settings.GOOGLE_SEARCH_ENGINE_ID}&"
        f"q={urllib.parse.quote(simple_query)}&"
        f"num=1"
    )
    
    print(f"üîó URL: {search_url}")
    
    timeout = httpx.Timeout(connect=5.0, read=30.0, write=10.0, pool=5.0)
    async with httpx.AsyncClient(timeout=timeout) as client:
        try:
            response = await client.get(search_url)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                if 'items' in data:
                    print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                else:
                    print("   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                try:
                    error_data = response.json()
                    print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                except:
                    print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                    
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å –∫–∞–≤—ã—á–∫–∞–º–∏
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 2: –ó–∞–ø—Ä–æ—Å —Å –∫–∞–≤—ã—á–∫–∞–º–∏")
    print("="*60)
    
    quoted_query = '"–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù"'
    search_url = (
        f"https://www.googleapis.com/customsearch/v1?"
        f"key={settings.GOOGLE_API_KEY}&"
        f"cx={settings.GOOGLE_SEARCH_ENGINE_ID}&"
        f"q={urllib.parse.quote(quoted_query)}&"
        f"num=1"
    )
    
    print(f"üîó URL: {search_url}")
    
    async with httpx.AsyncClient(timeout=timeout) as client:
        try:
            response = await client.get(search_url)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print("‚úÖ –ó–∞–ø—Ä–æ—Å —Å –∫–∞–≤—ã—á–∫–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                if 'items' in data:
                    print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                else:
                    print("   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                try:
                    error_data = response.json()
                    print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                except:
                    print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                    
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å —Å –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 3: –ó–∞–ø—Ä–æ—Å —Å –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é")
    print("="*60)
    
    charity_query = '"–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù" –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
    search_url = (
        f"https://www.googleapis.com/customsearch/v1?"
        f"key={settings.GOOGLE_API_KEY}&"
        f"cx={settings.GOOGLE_SEARCH_ENGINE_ID}&"
        f"q={urllib.parse.quote(charity_query)}&"
        f"num=1"
    )
    
    print(f"üîó URL: {search_url}")
    
    async with httpx.AsyncClient(timeout=timeout) as client:
        try:
            response = await client.get(search_url)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print("‚úÖ –ó–∞–ø—Ä–æ—Å —Å –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                if 'items' in data:
                    print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                    for item in data['items']:
                        print(f"   - {item.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                else:
                    print("   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                try:
                    error_data = response.json()
                    print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                except:
                    print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                    
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Search Engine ID
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Search Engine ID")
    print("="*60)
    
    print(f"üîç Search Engine ID: {settings.GOOGLE_SEARCH_ENGINE_ID}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç Search Engine ID
    if settings.GOOGLE_SEARCH_ENGINE_ID.startswith('0'):
        print("‚ö†Ô∏è  Search Engine ID –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '0' - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π")
    elif len(settings.GOOGLE_SEARCH_ENGINE_ID) < 10:
        print("‚ö†Ô∏è  Search Engine ID —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
    else:
        print("‚úÖ –§–æ—Ä–º–∞—Ç Search Engine ID –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

if __name__ == "__main__":
    asyncio.run(debug_google_api()) 
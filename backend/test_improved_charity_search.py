#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
"""

import asyncio
import httpx
import urllib.parse

# –†–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –≤–∞—à–µ–≥–æ .env —Ñ–∞–π–ª–∞
GOOGLE_API_KEY = "AIzaSyDaosLf3VqRE_wsoqL3aTCI03SgdMYBnqQ"
GOOGLE_SEARCH_ENGINE_ID = "d68dd1921d0c745aa"

async def test_improved_charity_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    
    print("üîç –£–õ–£–ß–®–ï–ù–ù–´–ô –ü–û–ò–°–ö –ë–õ–ê–ì–û–¢–í–û–†–ò–¢–ï–õ–¨–ù–û–ô –î–ï–Ø–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("="*70)
    
    company_name = "–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù"
    
    # –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    improved_queries = [
        # –ó–∞–ø—Ä–æ—Å 1: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        f'"{company_name}" ("–¥–µ—Ç—Å–∫–∏–π –¥–æ–º" OR "–∏–Ω—Ç–µ—Ä–Ω–∞—Ç" OR "–º–∞–ª–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã–µ —Å–µ–º—å–∏" OR "—Ç—è–∂–µ–ª–æ–±–æ–ª—å–Ω—ã–µ –¥–µ—Ç–∏" OR "–∏–Ω–≤–∞–ª–∏–¥—ã" OR "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏")',
        
        # –ó–∞–ø—Ä–æ—Å 2: –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        f'"{company_name}" ("–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å" OR "–æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫–∏" OR "–¥–∞—Ä–∏—Ç –ø–æ–¥–∞—Ä–∫–∏" OR "—Å–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤" OR "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã" OR "–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å")',
        
        # –ó–∞–ø—Ä–æ—Å 3: –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ñ–æ–Ω–¥—ã
        f'"{company_name}" ("–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–Ω–¥" OR "—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å" OR "–ö–°–û" OR "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" OR "—Å–ø–æ–Ω—Å–∏—Ä—É–µ—Ç" OR "—Ñ–∏–Ω–∞–Ω—Å–∏—Ä—É–µ—Ç" OR "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç")',
        
        # –ó–∞–ø—Ä–æ—Å 4: –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
        f'"{company_name}" ("–ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è" OR "—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã" OR "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã" OR "–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–µ—Ç–µ–π" OR "–ø–æ–º–æ—â—å —Å–µ–º—å—è–º")',
        
        # –ó–∞–ø—Ä–æ—Å 5: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        f'"{company_name}" ("–ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π" OR "–ø–æ–¥–∞—Ä–∫–∏ –¥–µ—Ç—Å–∫–∏–º –¥–æ–º–∞–º" OR "–ª–µ—á–µ–Ω–∏–µ –¥–µ—Ç–µ–π" OR "–ø–æ–º–æ—â—å –∏–Ω–≤–∞–ª–∏–¥–∞–º" OR "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")'
    ]
    
    timeout = httpx.Timeout(connect=5.0, read=30.0, write=10.0, pool=5.0)
    async with httpx.AsyncClient(timeout=timeout) as client:
        for i, query in enumerate(improved_queries, 1):
            print(f"\nüîç –£–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å {i}: {query}")
            print("-" * 60)
            
            search_url = (
                f"https://www.googleapis.com/customsearch/v1?"
                f"key={GOOGLE_API_KEY}&"
                f"cx={GOOGLE_SEARCH_ENGINE_ID}&"
                f"q={urllib.parse.quote(query)}&"
                f"num=5&"
                f"lr=lang_ru&"
                f"gl=kz"
            )
            
            try:
                response = await client.get(search_url)
                print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
                if response.status_code == 200:
                    data = response.json()
                    
                    if 'items' in data:
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                        
                        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
                        relevant_results = []
                        exclude_keywords = [
                            '–≥–æ—Å–∑–∞–∫–∞–∑', '—Ç–µ–Ω–¥–µ—Ä', '–∑–∞–∫—É–ø–∫–∏', 'goszakup', 'tender', 'procurement',
                            '—Ñ–∏–ª–∏–∞–ª', '–æ–±–ª–∞—Å—Ç–Ω–æ–π', '—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π', '–∫–∞–¥—Ä–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', 
                            '–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ', '—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ', '–¥–∏—Ä–µ–∫—Ç–æ—Ä', '—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å'
                        ]
                        
                        for item in data['items']:
                            title = item.get('title', '').lower()
                            snippet = item.get('snippet', '').lower()
                            full_text = f"{title} {snippet}"
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞
                            has_exclude = any(exclude in full_text for exclude in exclude_keywords)
                            
                            if not has_exclude:
                                relevant_results.append(item)
                                print(f"  ‚úÖ –†–ï–õ–ï–í–ê–ù–¢–ù–û: {item.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                                print(f"     {item.get('snippet', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')[:150]}...")
                                print(f"     {item.get('link', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
                                print()
                            else:
                                print(f"  ‚ùå –û–¢–§–ò–õ–¨–¢–†–û–í–ê–ù–û: {item.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                        
                        if not relevant_results:
                            print("  ‚ö†Ô∏è –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ")
                    else:
                        print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        if 'error' in data:
                            print(f"   –û—à–∏–±–∫–∞ API: {data['error']}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                    try:
                        error_data = response.json()
                        print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
                    except:
                        print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                
            except Exception as e:
                print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            
            # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if i < len(improved_queries):
                await asyncio.sleep(2)

if __name__ == "__main__":
    asyncio.run(test_improved_charity_search()) 
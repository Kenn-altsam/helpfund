#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç charity –ø–æ–∏—Å–∫–∞ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import httpx
import urllib.parse

# –†–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –≤–∞—à–µ–≥–æ .env —Ñ–∞–π–ª–∞
GOOGLE_API_KEY = "AIzaSyDaosLf3VqRE_wsoqL3aTCI03SgdMYBnqQ"
GOOGLE_SEARCH_ENGINE_ID = "d68dd1921d0c745aa"

async def test_charity_search_only():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ charity –ø–æ–∏—Å–∫ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –¢–ï–°–¢ CHARITY –ü–û–ò–°–ö–ê (–ë–ï–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•)")
    print("="*60)
    
    company_name = "–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    queries = [
        f'"{company_name}" ("–¥–µ—Ç—Å–∫–∏–π –¥–æ–º" OR "–∏–Ω—Ç–µ—Ä–Ω–∞—Ç" OR "–º–∞–ª–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã–µ —Å–µ–º—å–∏")',
        f'"{company_name}" ("–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å" OR "–¥–∞—Ä–∏—Ç –ø–æ–¥–∞—Ä–∫–∏" OR "—Å–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤")',
        f'"{company_name}" ("–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" OR "—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å" OR "–ö–°–û")'
    ]
    
    timeout = httpx.Timeout(connect=5.0, read=30.0, write=10.0, pool=5.0)
    async with httpx.AsyncClient(timeout=timeout) as client:
        for i, query in enumerate(queries, 1):
            print(f"\nüîç –ó–∞–ø—Ä–æ—Å {i}: {query}")
            print("-" * 50)
            
            search_url = (
                f"https://www.googleapis.com/customsearch/v1?"
                f"key={GOOGLE_API_KEY}&"
                f"cx={GOOGLE_SEARCH_ENGINE_ID}&"
                f"q={urllib.parse.quote(query)}&"
                f"num=3&"
                f"lr=lang_ru&"
                f"gl=kz"
            )
            
            try:
                response = await client.get(search_url)
                print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
                if response.status_code == 200:
                    data = response.json()
                    
                    if 'items' in data:
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data['items'])}")
                        
                        for j, item in enumerate(data['items'], 1):
                            title = item.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                            snippet = item.get('snippet', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
                            text_lower = f"{title} {snippet}".lower()
                            charity_words = ['–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–ø–æ–º–æ—â—å', '–¥–µ—Ç—Å–∫–∏–π –¥–æ–º', '–∏–Ω—Ç–µ—Ä–Ω–∞—Ç', '—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è', '–ö–°–û']
                            has_charity = any(word in text_lower for word in charity_words)
                            
                            if has_charity:
                                print(f"  ‚úÖ –†–ï–õ–ï–í–ê–ù–¢–ù–û: {title}")
                                print(f"     {snippet[:100]}...")
                            else:
                                print(f"  ‚ö†Ô∏è –ù–ï –†–ï–õ–ï–í–ê–ù–¢–ù–û: {title}")
                                print(f"     {snippet[:100]}...")
                            print()
                    else:
                        print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
            except Exception as e:
                print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            
            if i < len(queries):
                await asyncio.sleep(1)

    print("\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚úÖ Google API —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è")
    print("‚úÖ Fallback –º–µ—Ö–∞–Ω–∏–∑–º –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ charity –ø–æ–∏—Å–∫–∞ –≥–æ—Ç–æ–≤–∞!")

if __name__ == "__main__":
    asyncio.run(test_charity_search_only()) 
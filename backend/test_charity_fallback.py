#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞ –ø–æ–∏—Å–∫–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.ai_conversation.charity_fallback import charity_fallback

async def test_charity_fallback():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç fallback –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–∏—Å–∫–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    
    test_companies = [
        "–¢–ï–õ–ï–†–ê–î–ò–û–ö–û–†–ü–û–†–ê–¶–ò–Ø –ö–ê–ó–ê–•–°–¢–ê–ù",
        "–ö–ê–ó–ê–•–¢–ï–õ–ï–ö–û–ú", 
        "–ö–ê–ó–ú–£–ù–ê–ô–ì–ê–ó",
        "–ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –ö–û–ú–ü–ê–ù–ò–Ø"  # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª—É—á–∞—è –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö
    ]
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FALLBACK –ú–ï–•–ê–ù–ò–ó–ú–ê –ü–û–ò–°–ö–ê –ë–õ–ê–ì–û–¢–í–û–†–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("="*70)
    
    for company_name in test_companies:
        print(f"\nüìã –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ–º–ø–∞–Ω–∏—é: {company_name}")
        print("-" * 50)
        
        # –¢–µ—Å—Ç 1: –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        print("üîç –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        local_results = charity_fallback.search_local_database(company_name)
        
        if local_results:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(local_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for i, result in enumerate(local_results, 1):
                print(f"  {i}. {result.title}")
                print(f"     {result.description}")
                print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {result.source}")
                print(f"     –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score}")
                print()
        else:
            print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ")
        
        # –¢–µ—Å—Ç 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        print("üîç –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö")
        try:
            alternative_results = await charity_fallback.search_alternative_sources(company_name)
            
            if alternative_results:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(alternative_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                for i, result in enumerate(alternative_results, 1):
                    print(f"  {i}. {result.title}")
                    print(f"     {result.description}")
                    print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {result.source}")
                    print(f"     –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score}")
                    print()
            else:
                print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö: {e}")
        
        # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–æ–¥–∫–∏
        print("üîç –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–æ–¥–∫–∏")
        all_results = local_results + (alternative_results if 'alternative_results' in locals() else [])
        summary = charity_fallback.generate_summary(all_results, company_name)
        
        print("üìù –°–≤–æ–¥–∫–∞:")
        print(summary)
        
        print("\n" + "="*70)

def test_charity_relevance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏"""
    
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ò –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò")
    print("="*50)
    
    test_texts = [
        "–ö–æ–º–ø–∞–Ω–∏—è –¢–†–ö –æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–º–æ—â—å –¥–µ—Ç—Å–∫–∏–º –¥–æ–º–∞–º",
        "–¢–†–ö —Å–ø–æ–Ω—Å–∏—Ä—É–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ",
        "–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∫–æ–º–ø–∞–Ω–∏–∏ –¢–†–ö –ø–æ –Ω–∏–∑–∫–∏–º —Ü–µ–Ω–∞–º",
        "–í–∞–∫–∞–Ω—Å–∏–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¢–†–ö - —Ä–∞–±–æ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö",
        "–¢–†–ö —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ–Ω–¥—ã"
    ]
    
    for text in test_texts:
        is_relevant = charity_fallback._is_charity_relevant(text)
        status = "‚úÖ –†–ï–õ–ï–í–ê–ù–¢–ù–û" if is_relevant else "‚ùå –ù–ï –†–ï–õ–ï–í–ê–ù–¢–ù–û"
        print(f"{status}: {text}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞...")
    
    # –¢–µ—Å—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    test_charity_relevance()
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    asyncio.run(test_charity_fallback())
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!") 
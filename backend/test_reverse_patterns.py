#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å –æ–±—Ä–∞—Ç–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º —Å–ª–æ–≤
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.ai_conversation.location_service import extract_location_simple

def test_reverse_patterns():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –æ–±—Ä–∞—Ç–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º —Å–ª–æ–≤"""
    
    test_cases = [
        # –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤
        ("10 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –£–ª—ã—Ç–∞—É", "–£–ª—ã—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ê–ª–º–∞—Ç—ã", "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ü–æ–∫–∞–∂–∏ 5 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –ê—Ç—ã—Ä–∞—É", "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ö–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ö–∞—Ä–∞–≥–∞–Ω–¥–∞", "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ 15 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –ö–æ—Å—Ç–∞–Ω–∞–π", "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ü–æ–∫–∞–∂–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ú–∞–Ω–≥–∏—Å—Ç–∞—É", "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ 20 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –ü–∞–≤–ª–æ–¥–∞—Ä", "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ö–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ñ–∞–º–±—ã–ª", "–ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –í–æ—Å—Ç–æ—á–Ω—ã–π –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ü–æ–∫–∞–∂–∏ 10 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –ó–∞–ø–∞–¥–Ω—ã–π –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ö–æ–º–ø–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ê–∫–º–æ–ª–∞", "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ 25 –∫–æ–º–ø–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –Æ–∂–Ω—ã–π –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        
        # –û–±—ã—á–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
        ("10 –∫–æ–º–ø–∞–Ω–∏–π –≤ –£–ª—ã—Ç–∞—É—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏", "–£–ª—ã—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ù–∞–π–¥–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –ê–ª–º–∞—Ç–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏", "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
        ("–ü–æ–∫–∞–∂–∏ 5 –∫–æ–º–ø–∞–Ω–∏–π –≤ –ê—Ç—ã—Ä–∞—É—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏", "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –æ–±—Ä–∞—Ç–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º —Å–ª–æ–≤...")
    print("=" * 70)
    
    success_count = 0
    total_count = len(test_cases)
    
    for i, (query, expected) in enumerate(test_cases, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: '{query}'")
        
        location = extract_location_simple(query)
        print(f"üìç –ò–∑–≤–ª–µ—á–µ–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è: {location}")
        print(f"üéØ –û–∂–∏–¥–∞–µ–º–∞—è –ª–æ–∫–∞—Ü–∏—è: {expected}")
        
        if location == expected:
            print("‚úÖ –£–°–ü–ï–•: –õ–æ–∫–∞—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            success_count += 1
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –õ–æ–∫–∞—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    print("\n" + "=" * 70)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_count} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_count:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
    else:
        print(f"‚ö†Ô∏è {total_count - success_count} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏")

if __name__ == "__main__":
    test_reverse_patterns() 